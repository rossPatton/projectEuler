# https://projecteuler.net/problem=2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# ruby prob-2-fibon.rb


def fibo(n)
  $i = 0
  $fibo = []

  until $i > n
    if $i === 0 || $i === 1
      $val = $i
    else
      $val = $fibo[$i - 1] + $fibo[$i - 2]
    end

    $fibo.push($val)
    $i += 1
  end

  calcEvens($fibo)
end


def calcEvens(fibo)
  $i = 0
  $sum = 0

  until $i === fibo.length
    if fibo[$i] % 2 === 0
      $sum += fibo[$i]
    end

    $i += 1
  end

  puts $sum
end


fibo(10)