/*
https://projecteuler.net/problem=2

Each new term in the fibznacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the fibznacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

@solution 4613732

iojs prob-2-fibonacci.js

*/

'use strict'

// alternative below using generators and a more functional approach
(function() {
  function calcEvens(fibz) {
    return fibz.filter((val) => val % 2 === 0)
      .reduce(( prev, curr ) => prev + curr);
  }

  // get fibz up to limit, then calc evens
  function* fibzGen(fibz) {
    yield fibz[fibz.length - 1] + fibz[fibz.length - 2]
  }

  function getFibz(limit) {
    const fibz = [0, 1, 1]

    while ( fibzGen(fibz).next().value < limit ) {
      fibz.push( fibzGen(fibz).next().value )
    }

    return fibz
  }

  console.log( calcEvens( getFibz(4000000) ) )
}())
